 cd ./Downloads
octaze@Nitro-AN515-58:~/Downloads$ file asciiftw
asciiftw: ELF 64-bit LSB pie executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=c29491782ee13aa7c5734d77b281865b608e46e9, for GNU/Linux 3.2.0, not stripped
octaze@Nitro-AN515-58:~/Downloads$ sript asciiftw
Command 'sript' not found, did you mean:
  command 'script' from deb bsdutils (1:2.38.1-4ubuntu1)
Try: sudo apt install <deb name>
octaze@Nitro-AN515-58:~/Downloads$ strings asciiftw
/lib64/ld-linux-x86-64.so.2
libc.so.6
__stack_chk_fail
printf
__cxa_finalize
__libc_start_main
GLIBC_2.2.5
GLIBC_2.4
_ITM_deregisterTMCloneTable
__gmon_start__
_ITM_registerTMCloneTable
u+UH
[]A\A]A^A_
The flag starts with %x
:*3$"
GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0
crtstuff.c
deregister_tm_clones
__do_global_dtors_aux
completed.8061
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
asciiftw.c
__FRAME_END__
__init_array_end
_DYNAMIC
__init_array_start
__GNU_EH_FRAME_HDR
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
_ITM_deregisterTMCloneTable
_edata
__stack_chk_fail@@GLIBC_2.4
printf@@GLIBC_2.2.5
__libc_start_main@@GLIBC_2.2.5
__data_start
__gmon_start__
__dso_handle
_IO_stdin_used
__libc_csu_init
__bss_start
main
__TMC_END__
_ITM_registerTMCloneTable
__cxa_finalize@@GLIBC_2.2.5
.symtab
.strtab
.shstrtab
.interp
.note.gnu.property
.note.gnu.build-id
.note.ABI-tag
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.plt.got
.plt.sec
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.dynamic
.data
.bss
.comment
octaze@Nitro-AN515-58:~/Downloads$ gdb ./asciiftw 
GNU gdb (Ubuntu 13.1-2ubuntu2) 13.1
Copyright (C) 2023 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<https://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./asciiftw...

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.ubuntu.com>
Enable debuginfod for this session? (y or [n]) n
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
(No debugging symbols found in ./asciiftw)
(gdb) set disassembbly-flavor intel
No symbol table is loaded.  Use the "file" command.
(gdb) set disassembly-flavor intel
(gdb) disassemble main
Dump of assembler code for function main:
   0x0000000000001169 <+0>:	endbr64
   0x000000000000116d <+4>:	push   rbp
   0x000000000000116e <+5>:	mov    rbp,rsp
   0x0000000000001171 <+8>:	sub    rsp,0x30
   0x0000000000001175 <+12>:	mov    rax,QWORD PTR fs:0x28
   0x000000000000117e <+21>:	mov    QWORD PTR [rbp-0x8],rax
   0x0000000000001182 <+25>:	xor    eax,eax
   0x0000000000001184 <+27>:	mov    BYTE PTR [rbp-0x30],0x70
   0x0000000000001188 <+31>:	mov    BYTE PTR [rbp-0x2f],0x69
   0x000000000000118c <+35>:	mov    BYTE PTR [rbp-0x2e],0x63
   0x0000000000001190 <+39>:	mov    BYTE PTR [rbp-0x2d],0x6f
   0x0000000000001194 <+43>:	mov    BYTE PTR [rbp-0x2c],0x43
   0x0000000000001198 <+47>:	mov    BYTE PTR [rbp-0x2b],0x54
   0x000000000000119c <+51>:	mov    BYTE PTR [rbp-0x2a],0x46
   0x00000000000011a0 <+55>:	mov    BYTE PTR [rbp-0x29],0x7b
   0x00000000000011a4 <+59>:	mov    BYTE PTR [rbp-0x28],0x41
   0x00000000000011a8 <+63>:	mov    BYTE PTR [rbp-0x27],0x53
   0x00000000000011ac <+67>:	mov    BYTE PTR [rbp-0x26],0x43
   0x00000000000011b0 <+71>:	mov    BYTE PTR [rbp-0x25],0x49
   0x00000000000011b4 <+75>:	mov    BYTE PTR [rbp-0x24],0x49
   0x00000000000011b8 <+79>:	mov    BYTE PTR [rbp-0x23],0x5f
   0x00000000000011bc <+83>:	mov    BYTE PTR [rbp-0x22],0x49
--Type <RET> for more, q to quit, c to continue without paging--c
   0x00000000000011c0 <+87>:	mov    BYTE PTR [rbp-0x21],0x53
   0x00000000000011c4 <+91>:	mov    BYTE PTR [rbp-0x20],0x5f
   0x00000000000011c8 <+95>:	mov    BYTE PTR [rbp-0x1f],0x45
   0x00000000000011cc <+99>:	mov    BYTE PTR [rbp-0x1e],0x41
   0x00000000000011d0 <+103>:	mov    BYTE PTR [rbp-0x1d],0x53
   0x00000000000011d4 <+107>:	mov    BYTE PTR [rbp-0x1c],0x59
   0x00000000000011d8 <+111>:	mov    BYTE PTR [rbp-0x1b],0x5f
   0x00000000000011dc <+115>:	mov    BYTE PTR [rbp-0x1a],0x33
   0x00000000000011e0 <+119>:	mov    BYTE PTR [rbp-0x19],0x43
   0x00000000000011e4 <+123>:	mov    BYTE PTR [rbp-0x18],0x46
   0x00000000000011e8 <+127>:	mov    BYTE PTR [rbp-0x17],0x34
   0x00000000000011ec <+131>:	mov    BYTE PTR [rbp-0x16],0x42
   0x00000000000011f0 <+135>:	mov    BYTE PTR [rbp-0x15],0x46
   0x00000000000011f4 <+139>:	mov    BYTE PTR [rbp-0x14],0x41
   0x00000000000011f8 <+143>:	mov    BYTE PTR [rbp-0x13],0x44
   0x00000000000011fc <+147>:	mov    BYTE PTR [rbp-0x12],0x7d
   0x0000000000001200 <+151>:	movzx  eax,BYTE PTR [rbp-0x30]
   0x0000000000001204 <+155>:	movsx  eax,al
   0x0000000000001207 <+158>:	mov    esi,eax
   0x0000000000001209 <+160>:	lea    rdi,[rip+0xdf4]        # 0x2004
   0x0000000000001210 <+167>:	mov    eax,0x0
   0x0000000000001215 <+172>:	call   0x1070 <printf@plt>
   0x000000000000121a <+177>:	nop
   0x000000000000121b <+178>:	mov    rax,QWORD PTR [rbp-0x8]
   0x000000000000121f <+182>:	xor    rax,QWORD PTR fs:0x28
   0x0000000000001228 <+191>:	je     0x122f <main+198>
   0x000000000000122a <+193>:	call   0x1060 <__stack_chk_fail@plt>
   0x000000000000122f <+198>:	leave
   0x0000000000001230 <+199>:	ret
End of assembler dump.
(gdb) b *(main+151)
Breakpoint 1 at 0x1200
(gdb) r
Starting program: /home/octaze/Downloads/asciiftw 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, 0x0000555555555200 in main ()
(gdb) p $rbp-0x30
$1 = (void *) 0x7fffffffde90
(gdb) p/s (char* ) ($rbp-0x30)
$2 = 0x7fffffffde90 "picoCTF{ASCII_IS_EASY_3CF4BFAD}"
(gdb) \
